get:
    tags:
        - admin
    summary: Get Book by ID
    description: Get a specific book by ID
    operationId: getBookById
    security:
        - bearerAuth: []
    parameters:
        - name: book_id
          in: path
          required: true
          schema:
              type: integer
          description: ID of the book to retrieve
    responses:
        "200":
            description: Book retrieved successfully
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                description: response success
                                example: "成功しました。"
                            data:
                                $ref: "../../models/admin/book.yaml"
                        required:
                            - message
                            - data
        "404":
            description: Book not found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                description: Error message
                                example: "Book not found"
                        required:
                            - message
        "500":
            $ref: "../../responses/generic_500.yaml"

put:
    tags:
        - admin
    summary: Update Book
    description: Update an existing book
    operationId: updateBook
    security:
        - bearerAuth: []
    parameters:
        - name: book_id
          in: path
          required: true
          schema:
              type: integer
          description: ID of the book to update
        - name: _method
          in: query
          required: true
          schema:
              type: string
              enum: [PUT]
          description: Method spoofing parameter required for Laravel
    requestBody:
        required: true
        content:
            multipart/form-data:
                schema:
                    $ref: "../../requests/admin/put_book_request.yaml"
                encoding:
                    imageFile:
                        contentType: image/*
                    "additional_images[]":
                        contentType: image/*
    responses:
        "200":
            description: Book updated successfully
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                description: response success
                                example: "成功しました。"
                            data:
                                $ref: "../../models/admin/book.yaml"
                        required:
                            - message
                            - data
        "404":
            description: Book not found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                description: Error message
                                example: "Book not found"
                        required:
                            - message
        "422":
            $ref: "../../responses/generic_422.yaml"
        "500":
            $ref: "../../responses/generic_500.yaml"

delete:
    tags:
        - admin
    summary: Delete Book
    description: Delete a specific book
    operationId: deleteBook
    security:
        - bearerAuth: []
    parameters:
        - name: book_id
          in: path
          required: true
          schema:
              type: integer
          description: ID of the book to delete
    responses:
        "200":
            description: Book deleted successfully
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                description: response success
                                example: "Xóa sách thành công"
                        required:
                            - message
        "404":
            description: Book not found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                description: Error message
                                example: "Book not found"
                        required:
                            - message
        "500":
            $ref: "../../responses/generic_500.yaml"

patch:
    tags:
        - admin
    summary: Restore Book
    description: Restore a soft-deleted book
    operationId: restoreBook
    security:
        - bearerAuth: []
    parameters:
        - name: book_id
          in: path
          required: true
          schema:
              type: integer
          description: ID of the book to restore
    responses:
        "200":
            description: Book restored successfully
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                description: response success
                                example: "Sách đã được khôi phục thành công."
                        required:
                            - message
        "404":
            description: Book not found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                description: Error message
                                example: "Book not found"
                        required:
                            - message
        "500":
            $ref: "../../responses/generic_500.yaml"
